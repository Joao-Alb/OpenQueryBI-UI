medium pred: SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player);
medium gold: SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1

medium pred: SELECT Name FROM player WHERE Earnings = (SELECT MAX(Earnings) FROM player);
medium gold: SELECT Name FROM player ORDER BY Earnings DESC LIMIT 1

hard pred: SELECT Manufacturer, COUNT(*) FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1;
hard gold: SELECT Manufacturer FROM club GROUP BY Manufacturer ORDER BY COUNT(*) DESC LIMIT 1

hard pred: SELECT Name FROM club EXCEPT SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID;
hard gold: SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)

hard pred: SELECT Name FROM club EXCEPT SELECT T1.Name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID;
hard gold: SELECT Name FROM club WHERE Club_ID NOT IN (SELECT Club_ID FROM player)

hard pred: SELECT Country FROM player WHERE Earnings > 1400000 UNION SELECT Country FROM player WHERE Earnings < 1100000;
hard gold: SELECT Country FROM player WHERE Earnings  >  1400000 INTERSECT SELECT Country FROM player WHERE Earnings  <  1100000

eval_err_num:1
hard pred: SELECT T1.product_id, T1.product_name, T1.product_price, T1.product_color FROM Products AS T1 LEFT JOIN Order_Items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id HAVING count(DISTINCT T2.order_id) < 2;
hard gold: select t1.product_id ,  t1.product_name ,  t1.product_price ,  t1.product_color from products as t1 join order_items as t2 on t1.product_id  =  t2.product_id join orders as t3 on t2.order_id  =  t3.order_id group by t1.product_id having count(*) < 2

medium pred: SELECT T1.order_id, T1.date_order_placed FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id, T1.date_order_placed HAVING count(*) >= 2;
medium gold: SELECT T1.order_id ,  T1.date_order_placed FROM Orders AS T1 JOIN Order_items AS T2 ON T1.order_id  =  T2.order_id GROUP BY T1.order_id HAVING count(*)  >=  2

eval_err_num:2
extra pred: SELECT T1.product_id, T1.product_name, T1.product_price FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id HAVING count(*) = (SELECT max(order_count) FROM (SELECT count(*) AS order_count FROM Order_Items GROUP BY product_id));
extra gold: SELECT T1.product_id ,  T1.product_name ,  T1.product_price FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id ORDER BY count(*) DESC LIMIT 1

extra pred: SELECT T1.order_id, SUM(T3.product_price) FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Products AS T3 ON T2.product_id = T3.product_id GROUP BY T1.order_id ORDER BY SUM(T3.product_price) LIMIT 1;
extra gold: SELECT T1.order_id ,  sum(T2.product_price) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.order_id ORDER BY sum(T2.product_price) ASC LIMIT 1

eval_err_num:3
extra pred: SELECT T1.order_id, min(total_cost) FROM (SELECT T1.order_id, sum(T3.product_price) AS total_cost FROM Orders AS T1 JOIN Order_Items AS T2 ON T1.order_id = T2.order_id JOIN Products AS T3 ON T2.product_id = T3.product_id GROUP BY T1.order_id) AS T1;
extra gold: select t1.order_id ,  sum(t2.product_price) from order_items as t1 join products as t2 on t1.product_id  =  t2.product_id group by t1.order_id order by sum(t2.product_price) asc limit 1

eval_err_num:4
medium pred: SELECT T1.invoice_status_code, T1.invoice_date, T2.shipment_date FROM Invoices AS T1 LEFT JOIN Shipments AS T2 ON T1.invoice_number = T2.invoice_number;
medium gold: SELECT T1.invoice_status_code ,  T1.invoice_date ,  T2.shipment_date FROM Invoices AS T1 JOIN Shipments AS T2 ON T1.invoice_number  =  T2.invoice_number

hard pred: SELECT T1.product_name, T1.product_color FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id = T3.order_item_id;
hard gold: SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id

hard pred: SELECT DISTINCT T1.product_name, T1.product_color FROM Products AS T1 JOIN Order_Items AS T2 ON T1.product_id = T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id = T3.order_item_id;
hard gold: SELECT T1.product_name ,  T1.product_color FROM Products AS T1 JOIN Order_items AS T2 ON T1.product_id  =  T2.product_id JOIN Shipment_Items AS T3 ON T2.order_item_id  =  T3.order_item_id JOIN Shipments AS T4 ON T3.shipment_id  =  T4.shipment_id

hard pred: SELECT T2.invoice_status_code FROM Orders AS T1 JOIN Invoices AS T2 ON T1.order_id = T2.invoice_number WHERE T1.order_id NOT IN (SELECT order_id FROM Shipments);
hard gold: SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )

hard pred: SELECT T2.invoice_status_code FROM Orders AS T1 JOIN Shipments AS T3 ON T1.order_id = T3.order_id JOIN Invoices AS T2 ON T3.invoice_number = T2.invoice_number WHERE T1.order_id NOT IN (SELECT order_id FROM Shipments);
hard gold: SELECT invoice_status_code FROM Invoices WHERE invoice_number NOT IN ( SELECT invoice_number FROM Shipments )

extra pred: SELECT count(*) FROM Products WHERE product_id NOT IN (SELECT DISTINCT product_id FROM Order_Items);
extra gold: SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )

extra pred: SELECT count(*) FROM Products WHERE product_id NOT IN (SELECT DISTINCT product_id FROM Order_Items);
extra gold: SELECT count(*) FROM Products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )

easy pred: SELECT count(DISTINCT T3.product_id) FROM Shipment_Items AS T1 JOIN Order_Items AS T2 ON T1.order_item_id = T2.order_item_id JOIN Products AS T3 ON T2.product_id = T3.product_id;
easy gold: SELECT count(*) FROM Shipment_Items

extra pred: SELECT email_address, town_city, county FROM Customers WHERE gender_code = 'Unknown';
extra gold: SELECT email_address ,  town_city ,  county FROM Customers WHERE gender_code  =  ( SELECT gender_code FROM Customers GROUP BY gender_code ORDER BY count(*) ASC LIMIT 1 )

eval_err_num:5
hard pred: SELECT T1.date_order_placed FROM Orders AS T1 JOIN (SELECT customer_id FROM Customer_Payment_Methods GROUP BY customer_id HAVING count(*) >= 2) AS T2 ON T1.customer_id = T2.customer_id;
hard gold: SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )

hard pred: SELECT T2.date_order_placed FROM Customer_Payment_Methods AS T1 JOIN Orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_id IN (SELECT customer_id FROM Customer_Payment_Methods GROUP BY customer_id HAVING count(*) >= 2);
hard gold: SELECT date_order_placed FROM Orders WHERE customer_id IN ( SELECT T1.customer_id FROM Customers AS T1 JOIN Customer_Payment_Methods AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2 )

extra pred: SELECT product_color, product_description, product_size FROM Products WHERE product_price < (SELECT max(product_price) FROM Products);
extra gold: select product_color ,  product_description ,  product_size from products where product_price  !=  ( select max(product_price) from products )

medium pred: SELECT Name FROM director WHERE Age = (SELECT max(Age) FROM director);
medium gold: SELECT name FROM director ORDER BY age DESC LIMIT 1

medium pred: SELECT Title FROM program WHERE Start_Year = (SELECT MAX(Start_Year) FROM program);
medium gold: SELECT title FROM program ORDER BY start_year DESC LIMIT 1

eval_err_num:6
extra pred: SELECT COUNT(*) FROM channel WHERE Channel_ID NOT IN (SELECT DISTINCT Channel_ID FROM program WHERE Channel_ID IS NOT NULL);
extra gold: SELECT count(*) FROM channel WHERE channel_id NOT IN (SELECT channel_id FROM program)

hard pred: SELECT Channel_ID, Name FROM channel EXCEPT SELECT T1.Channel_ID, T1.Name FROM channel AS T1 JOIN program AS T2 ON T1.Channel_ID = T2.Channel_ID WHERE T2.Director_ID = 2;
hard gold: SELECT t1.name ,  t1.channel_id FROM channel AS t1 JOIN director_admin AS t2 ON t1.channel_id  =  t2.channel_id JOIN director AS t3 ON t2.director_id  =  t3.director_id WHERE t3.name != "Hank Baskett"

eval_err_num:7
medium pred: SELECT Transmitter FROM radio WHERE CAST(ERP_kW AS REAL) > 150 OR CAST(ERP_kW AS REAL) < 30;
medium gold: SELECT Transmitter FROM radio WHERE ERP_kW  >  150 OR ERP_kW  <  30

eval_err_num:8
medium pred: SELECT Transmitter FROM radio ORDER BY CAST(ERP_kW AS REAL) DESC LIMIT 1;
medium gold: SELECT Transmitter FROM radio ORDER BY ERP_kW DESC LIMIT 1

eval_err_num:9
easy pred: SELECT AVG(CAST(ERP_kW AS REAL)) FROM radio;
easy gold: SELECT avg(ERP_kW) FROM radio

medium pred: SELECT T1.Transmitter, COUNT(T2.City_channel_ID) FROM radio AS T1 JOIN city_channel_radio AS T2 ON T1.Radio_ID = T2.Radio_ID GROUP BY T1.Transmitter;
medium gold: SELECT T2.Transmitter ,  COUNT(*) FROM city_channel_radio AS T1 JOIN radio AS T2 ON T1.Radio_ID  =  T2.Radio_ID GROUP BY T2.Transmitter

eval_err_num:10
hard pred: SELECT T1.vehicle_count , T1.Driver_ID FROM (SELECT Driver_ID , count(*) AS vehicle_count FROM vehicle_driver GROUP BY Driver_ID) AS T1 WHERE T1.vehicle_count = (SELECT min(vehicle_count) FROM (SELECT count(*) AS vehicle_count FROM vehicle_driver GROUP BY Driver_ID));
hard gold: SELECT count(*) ,  driver_id FROM vehicle_driver GROUP BY driver_id ORDER BY count(*) DESC LIMIT 1

medium pred: SELECT max(Power), avg(Power) FROM vehicle WHERE Builder LIKE '%Zhuzhou%';
medium gold: SELECT max(power) ,  avg(power) FROM vehicle WHERE builder  =  'Zhuzhou'

eval_err_num:11
hard pred: SELECT T1.Vehicle_ID FROM vehicle_driver AS T1 GROUP BY T1.Vehicle_ID HAVING count(*) = (SELECT min(count_usage) FROM (SELECT count(*) AS count_usage FROM vehicle_driver GROUP BY Vehicle_ID));
hard gold: SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1

eval_err_num:12
hard pred: SELECT T1.Vehicle_ID FROM vehicle AS T1 LEFT JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID ORDER BY count(T2.Vehicle_ID) LIMIT 1;
hard gold: SELECT vehicle_id FROM vehicle_driver GROUP BY vehicle_id ORDER BY count(*) ASC LIMIT 1

medium pred: SELECT COUNT(DISTINCT T1.Driver_ID) FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Build_Year = '2012';
medium gold: SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012

medium pred: SELECT count(DISTINCT T1.Driver_ID) FROM driver AS T1 JOIN vehicle_driver AS T2 ON T1.Driver_ID = T2.Driver_ID JOIN vehicle AS T3 ON T2.Vehicle_ID = T3.Vehicle_ID WHERE T3.Build_Year = '2012';
medium gold: SELECT count(DISTINCT T1.driver_id) FROM vehicle_driver AS T1 JOIN vehicle AS T2 ON T1.vehicle_id  =  T2.vehicle_id WHERE T2.build_year  =  2012

eval_err_num:13
medium pred: SELECT Model FROM vehicle WHERE CAST(Total_Production AS INTEGER) > 100 OR Top_Speed > 150;
medium gold: SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150

eval_err_num:14
medium pred: SELECT Model FROM vehicle WHERE CAST(Total_Production AS INTEGER) > 100 OR Top_Speed > 150;
medium gold: SELECT model FROM vehicle WHERE total_production  >  100 OR top_speed  >  150

hard pred: SELECT T1.Vehicle_ID, T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID HAVING count(*) = 2 UNION SELECT Vehicle_ID, Model FROM vehicle WHERE Builder = 'Ziyang';
hard gold: SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'

hard pred: SELECT T1.Vehicle_ID, T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID HAVING count(*) = 2 UNION SELECT Vehicle_ID, Model FROM vehicle WHERE Builder = 'Ziyang';
hard gold: SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  =  2 OR T1.builder  =  'Ziyang'

extra pred: SELECT T1.Vehicle_ID, T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID HAVING count(*) > 2 UNION SELECT T1.Vehicle_ID, T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Name = 'Jeff Gordon';
extra gold: SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2

extra pred: SELECT T1.Vehicle_ID, T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID GROUP BY T1.Vehicle_ID HAVING count(*) > 2 UNION SELECT T1.Vehicle_ID, T1.Model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.Vehicle_ID = T2.Vehicle_ID JOIN driver AS T3 ON T2.Driver_ID = T3.Driver_ID WHERE T3.Name = 'Jeff Gordon';
extra gold: SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id JOIN driver AS T3 ON T2.driver_id  =  T3.driver_id WHERE T3.name  =  'Jeff Gordon' UNION SELECT T1.vehicle_id ,  T1.model FROM vehicle AS T1 JOIN vehicle_driver AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T2.vehicle_id HAVING count(*)  >  2

                     easy                 medium               hard                 extra                all                 
count                48                   69                   53                   30                   200                 
=====================   EXECUTION ACCURACY     =====================
execution            0.958                0.899                0.755                0.900                0.875               

====================== EXACT MATCHING ACCURACY =====================
exact match          0.958                0.797                0.679                0.667                0.785               

---------------------PARTIAL MATCHING ACCURACY----------------------
select               0.979                0.984                0.979                1.000                0.984               
select(no AGG)       0.979                0.984                0.979                1.000                0.984               
where                1.000                0.821                0.833                0.733                0.831               
where(no OP)         1.000                0.857                0.889                1.000                0.915               
group(no Having)     1.000                0.944                1.000                0.778                0.938               
group                1.000                0.944                0.875                0.778                0.896               
order                1.000                1.000                1.000                1.000                1.000               
and/or               1.000                0.957                1.000                1.000                0.985               
IUEN                 0.000                0.000                0.455                0.750                0.579               
keywords             1.000                0.894                0.857                0.926                0.908               
---------------------- PARTIAL MATCHING RECALL ----------------------
select               0.958                0.913                0.887                0.900                0.915               
select(no AGG)       0.958                0.913                0.887                0.900                0.915               
where                1.000                0.852                0.682                0.611                0.766               
where(no OP)         1.000                0.889                0.727                0.833                0.844               
group(no Having)     1.000                0.944                0.800                0.778                0.865               
group                1.000                0.944                0.700                0.778                0.827               
order                1.000                0.167                0.842                0.714                0.762               
and/or               1.000                1.000                1.000                1.000                1.000               
IUEN                 0.000                0.000                0.833                0.750                0.786               
keywords             1.000                0.824                0.766                0.833                0.837               
---------------------- PARTIAL MATCHING F1 --------------------------
select               0.968                0.947                0.931                0.947                0.948               
select(no AGG)       0.968                0.947                0.931                0.947                0.948               
where                1.000                0.836                0.750                0.667                0.797               
where(no OP)         1.000                0.873                0.800                0.909                0.878               
group(no Having)     1.000                0.944                0.889                0.778                0.900               
group                1.000                0.944                0.778                0.778                0.860               
order                1.000                0.286                0.914                0.833                0.865               
and/or               1.000                0.978                1.000                1.000                0.992               
IUEN                 1.000                1.000                0.588                0.750                0.667               
keywords             1.000                0.857                0.809                0.877                0.871               
